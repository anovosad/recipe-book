// templates/register.templ
package templates

import "recipe-book/models"

templ Register(data *models.PageData) {
	@Base("Register", data) {
		<div class="auth-container">
			<div class="auth-card">
				<h2><i class="fas fa-user-plus"></i> Register</h2>
				<form id="registerForm" class="auth-form">
					<div class="form-group">
						<label for="username">Username</label>
						<input type="text" id="username" name="username" class="form-control" required/>
					</div>
					<div class="form-group">
						<label for="email">Email</label>
						<input type="email" id="email" name="email" class="form-control" required/>
					</div>
					<div class="form-group">
						<label for="password">Password</label>
						<input type="password" id="password" name="password" class="form-control" required minlength="6"/>
					</div>
					<button type="submit" class="btn btn-primary btn-full">
						<i class="fas fa-user-plus"></i> Register
					</button>
				</form>
				<div class="auth-links">
					<p>Already have an account? <a href="/login">Login here</a></p>
				</div>
			</div>
		</div>
		<script>
			document.getElementById('registerForm').addEventListener('submit', async function(e) {
				e.preventDefault();
				
				const submitBtn = this.querySelector('button[type="submit"]');
				const originalText = submitBtn.innerHTML;
				
				// Show loading state
				submitBtn.disabled = true;
				submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Registering...';
				
				try {
					// Collect form data as JSON
					const registerData = {
						username: this.querySelector('#username').value.trim(),
						email: this.querySelector('#email').value.trim(),
						password: this.querySelector('#password').value
					};
					
					const response = await fetch('/api/register', {
						method: 'POST',
						headers: {
							'Content-Type': 'application/json'
						},
						body: JSON.stringify(registerData)
					});
					
					const data = await response.json();
					
					if (data.success) {
						RecipeBook.showNotification(data.message, 'success');
						// Redirect to login after success
						setTimeout(() => {
							window.location.href = '/login?message=' + encodeURIComponent(data.message);
						}, 1500);
					} else {
						RecipeBook.showNotification(data.error || 'Registration failed', 'error');
					}
				} catch (error) {
					console.error('Registration error:', error);
					RecipeBook.showNotification('Registration failed. Please try again.', 'error');
				} finally {
					// Reset button state
					submitBtn.disabled = false;
					submitBtn.innerHTML = originalText;
				}
			});
		</script>
	}
}