
// templates/login.templ
package templates

import "recipe-book/models"

templ Login(data *models.PageData) {
	@Base("Login", data) {
		<div class="auth-container">
			<div class="auth-card">
				<h2><i class="fas fa-sign-in-alt"></i> Login</h2>
				<form id="loginForm" class="auth-form" data-api-endpoint="/api/login" data-redirect="/recipes">
					<div class="form-group">
						<label for="username">Username</label>
						<input type="text" id="username" name="username" class="form-control" required/>
					</div>
					<div class="form-group">
						<label for="password">Password</label>
						<input type="password" id="password" name="password" class="form-control" required/>
					</div>
					<button type="submit" class="btn btn-primary btn-full">
						<i class="fas fa-sign-in-alt"></i> Login
					</button>
				</form>
				<div class="auth-links">
					<p>Don't have an account? <a href="/register">Register here</a></p>
				</div>
			</div>
		</div>
		@LoginScript()
	}
}

// Minimal script that uses RecipeBook core functionality
templ LoginScript() {
	<script>
		RecipeBook.on('app:initialized', function() {
			const form = document.getElementById('loginForm');
			if (!form) return;
			
			form.addEventListener('submit', async function(e) {
				e.preventDefault();
				
				const submitBtn = this.querySelector('button[type="submit"]');
				const removeLoading = RecipeBook.addLoadingState(submitBtn, 'Logging in...');
				
				try {
					const loginData = {
						username: this.querySelector('#username').value.trim(),
						password: this.querySelector('#password').value
					};
					
					const response = await RecipeBook.apiRequest('/api/login', {
						method: 'POST',
						headers: { 'Content-Type': 'application/json' },
						body: JSON.stringify(loginData)
					});
					
					if (response.success) {
						RecipeBook.showNotification(response.message, 'success');
						setTimeout(() => {
							window.location.href = response.redirect || '/recipes';
						}, 1000);
					} else {
						RecipeBook.showNotification(response.error || 'Login failed', 'error');
					}
				} catch (error) {
					console.error('Login error:', error);
					RecipeBook.showNotification('Login failed. Please try again.', 'error');
				} finally {
					removeLoading();
				}
			});
		});
	</script>
}